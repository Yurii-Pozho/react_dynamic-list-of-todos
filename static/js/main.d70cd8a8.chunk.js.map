{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","onSetSelectedTodo","className","map","todo","classNames","userId","id","completed","title","type","onClick","TodoFilter","query","status","onSetQuery","onSetStatus","value","onChange","event","target","placeholder","length","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","user","setUser","useEffect","userFromServer","href","email","name","App","setTodos","setSelectedTodo","setQuery","setStatus","visibleTodos","filter","Status","Active","toLowerCase","includes","Completed","ALL","todoFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d70cd8a8.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null,\n  onSetSelectedTodo: (todo: Todo | null) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  onSetSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n          className={classNames(\n            { 'has-background-info-light': selectedTodo?.userId === todo.id },\n          )}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames(\n              { 'has-text-danger': !todo.completed },\n              { 'has-text-success': todo.completed },\n            )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => (\n                selectedTodo?.id === todo.id\n                  ? onSetSelectedTodo(null)\n                  : onSetSelectedTodo(todo)\n              )}\n            >\n              <span className=\"icon\">\n                <i className={selectedTodo?.id === todo.id\n                  ? 'far fa-eye-slash'\n                  : 'far fa-eye'}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","type Props = {\n  query: string,\n  status: string,\n  onSetQuery: (query: string) => void,\n  onSetStatus: (status: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  status,\n  onSetQuery,\n  onSetStatus,\n}) => {\n  const handleClear = () => {\n    onSetQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={(event) => onSetStatus(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => onSetQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {query.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClear}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nexport function wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport function get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo,\n  onSetSelectedTodo: (todo: Todo | null) => void\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  onSetSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(selectedTodo.id)\n      .then(userFromServer => setUser(userFromServer));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onSetSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [status, setStatus] = useState('all');\n\n  const visibleTodos = todos.filter(todo => {\n    enum Status {\n      ALL = 'all',\n      Completed = 'completed',\n      Active = 'active',\n    }\n\n    switch (status) {\n      case Status.Active:\n        return !todo.completed && todo.title.toLowerCase().includes(query.toLowerCase());\n\n      case Status.Completed:\n        return todo.completed && todo.title.toLowerCase().includes(query.toLowerCase());\n\n      case Status.ALL:\n      default:\n        return todo.title.toLowerCase().includes(query.toLowerCase());\n    }\n  });\n\n  useEffect(() => {\n    getTodos()\n      .then(todoFromServer => setTodos(todoFromServer));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onSetQuery={setQuery}\n                status={status}\n                onSetStatus={setStatus}\n              />\n            </div>\n\n            <div className=\"block\">\n              {visibleTodos.length === 0 && (\n                <Loader />\n              )}\n              <TodoList\n                todos={visibleTodos}\n                selectedTodo={selectedTodo}\n                onSetSelectedTodo={setSelectedTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          onSetSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}